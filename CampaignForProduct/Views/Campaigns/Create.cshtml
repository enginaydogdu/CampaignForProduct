@model CampaignForProduct.ViewModels.NewCampaignViewModel

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


<form id="newCampaign">
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Campaign</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.Campaign.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Campaign.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Campaign.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Campaign.ProductId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Campaign.ProductId, new SelectList(Model.Products, "Id", "Name"), "", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Campaign.ProductId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Campaign.Start, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Campaign.Start, new { htmlAttributes = new { @class = "form-control datepicker", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.Campaign.Start, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Campaign.End, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Campaign.End, new { htmlAttributes = new { @class = "form-control datepicker", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.Campaign.End, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
</form>

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        $(function () {

            $.ajax({
                type: "GET",
                contentType: "application/json; charset=utf-8",
                url: "/api/Products",
                data: "{}",
                dataType: "json",
                success: function (data) {
                    $.each(data, function () {
                        $("#Campaign_ProductId").append($("<option></option>").val(this['id']).text(this['name']));
                    });
                },
                error: function (Result) {
                    alert("An error occured while getting product list.");
                }
            });
                        
            $('#Campaign_Start').datepicker({
                format: 'dd.MM.yyyy',
                autoclose: true
            }).on('changeDate', function (e) {
                $('#Campaign_End').datepicker('setStartDate', e.date);
            });

            $('#Campaign_End').datepicker({
                format: 'dd.MM.yyyy',
                autoclose: true                
            }).on('changeDate', function (e) {
                $('#Campaign_Start').datepicker('setEndDate', e.date );
            });


        });

        $("#newCampaign").submit(function (e) {
            e.preventDefault();
            $.ajax({
                url: "/api/Campaigns",
                method: "post",
                data: {
                    Name: $("#Campaign_Name").val(),
                    ProductId: $("#Campaign_ProductId").val(),
                    Start: $("#Campaign_Start").val(),
                    End: $("#Campaign_End").val()
                }
            })
            .done(function () {
                $("#newCampaign")[0].reset();
                toastr.success("Campaign successfully created.");
            })
            .fail(function () {
                toastr.error("An error occured.");
            });
        });
    </script>
}
